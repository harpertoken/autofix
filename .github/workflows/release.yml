name: Release

on:
  push:
    branches: [main, master]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run preflight checks
        run: npm run preflight
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Build web app
        run: npm run build

      - name: Build CLI
        run: cd apps/cli && npm ci && npm run build

      - name: Configure Git for release
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

       - name: Check bundle sizes
         run: |
           echo "Client bundle sizes:"
           ls -lh dist/assets/
           echo "Server bundle size:"
           ls -lh api/index.js

       - name: Check if version exists
         run: |
           NEXT_VERSION=$(npx semantic-release --dry-run 2>/dev/null | grep "The next release version is" | awk '{print $6}')
           if [ -n "$NEXT_VERSION" ]; then
             if npm view @harpertoken/autofix-cli@$NEXT_VERSION version 2>/dev/null; then
               echo "Version $NEXT_VERSION already exists on npm. Skipping release."
               exit 0
             fi
           fi

       - name: Release
         run: npx semantic-release
         if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
         env:
           GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
